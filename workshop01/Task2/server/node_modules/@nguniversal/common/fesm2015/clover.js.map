{"version":3,"file":"clover.js","sources":["../../../../../../modules/common/clover/src/styles_host.ts","../../../../../../modules/common/clover/src/module.ts","../../../../../../modules/common/clover/src/transfer-http-cache/transfer-http-cache.interceptor.ts","../../../../../../modules/common/clover/src/transfer-http-cache/transfer-http-cache.module.ts","../../../../../../modules/common/clover/public_api.ts","../../../../../../modules/common/clover/index.ts","../../../../../../modules/common/clover/clover.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { DOCUMENT, ɵgetDOM as getDOM } from '@angular/common';\nimport { APP_ID, Inject, Injectable, OnDestroy, Optional } from '@angular/core';\nimport { ɵSharedStylesHost as SharedStylesHost } from '@angular/platform-browser';\n\ndeclare let ngDevMode: boolean | {} | undefined;\n\n@Injectable()\nexport class SSRStylesHost extends SharedStylesHost implements OnDestroy {\n  private head: HTMLHeadElement | null;\n  private _styleNodes = new Set<HTMLElement>();\n  private _styleNodesInDOM: Map<string | null, HTMLElement> | undefined;\n\n  constructor(\n    @Inject(DOCUMENT) private doc: Document,\n    @Optional() @Inject(APP_ID) private appId?: string,\n  ) {\n    super();\n    this.head = this.doc.querySelector('head');\n    const styles = this.head?.querySelectorAll(`style[ng-style='${this.appId}']`);\n    if (styles?.length) {\n      const items = Array.from(styles) as HTMLElement[];\n      this._styleNodesInDOM = new Map(items.map((el) => [el.textContent, el]));\n    }\n  }\n\n  private _addStyle(style: string): void {\n    const element = this._styleNodesInDOM?.get(style);\n    if (element) {\n      if (typeof ngDevMode !== undefined && ngDevMode) {\n        element.setAttribute('_ng-style-re-used', '');\n      }\n\n      this._styleNodesInDOM?.delete(style);\n      this._styleNodes.add(element);\n\n      return;\n    }\n\n    const el = getDOM().createElement('style');\n    el.textContent = style;\n\n    if (this.appId) {\n      el.setAttribute('ng-style', this.appId);\n    }\n\n    if (this.head) {\n      this.head.appendChild(el);\n    }\n\n    this._styleNodes.add(el);\n  }\n\n  onStylesAdded(additions: Set<string>) {\n    additions.forEach((style) => this._addStyle(style));\n  }\n\n  addHost(_hostNode: Node): void {\n    // stub\n  }\n\n  removeHost(_hostNode: Node): void {\n    // stub\n  }\n\n  ngOnDestroy() {\n    this._styleNodes.forEach((styleNode) => styleNode.remove());\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { DOCUMENT, ɵPLATFORM_SERVER_ID as PLATFORM_SERVER_ID } from '@angular/common';\nimport {\n  APP_ID,\n  ApplicationRef,\n  Inject,\n  ModuleWithProviders,\n  NgModule,\n  Optional,\n  PLATFORM_ID,\n} from '@angular/core';\nimport {\n  BrowserModule,\n  TransferState,\n  ɵDomSharedStylesHost as DomSharedStylesHost,\n  ɵSharedStylesHost as SharedStylesHost,\n  ɵescapeHtml as escapeHtml,\n} from '@angular/platform-browser';\nimport { filter, mapTo, take } from 'rxjs/operators';\nimport { SSRStylesHost } from './styles_host';\n\nexport interface NGRenderModeAPI {\n  getSerializedState: () => string | undefined;\n  getWhenStable: () => Promise<void>;\n  appId?: string;\n}\n\nexport type NGRenderMode = boolean | undefined | NGRenderModeAPI;\ndeclare let ngRenderMode: NGRenderMode;\n\n@NgModule({\n  exports: [BrowserModule],\n  imports: [],\n  providers: [],\n})\nexport class RendererModule {\n  constructor(\n    private applicationRef: ApplicationRef,\n    @Optional() private transferState?: TransferState,\n    @Optional() @Inject(APP_ID) private appId?: string,\n  ) {\n    if (typeof ngRenderMode !== 'undefined' && ngRenderMode) {\n      ngRenderMode = {\n        getSerializedState: () =>\n          this.transferState ? escapeHtml(this.transferState.toJson()) : undefined,\n        appId: this.appId,\n        getWhenStable: () =>\n          this.applicationRef.isStable\n            .pipe(\n              filter((isStable) => isStable),\n              take(1),\n              mapTo(undefined),\n            )\n            .toPromise(),\n      };\n    }\n  }\n\n  static forRoot(): ModuleWithProviders<RendererModule> {\n    return {\n      ngModule: RendererModule,\n      providers: [\n        ...(typeof ngRenderMode !== 'undefined' && ngRenderMode\n          ? [\n              { provide: PLATFORM_ID, useValue: PLATFORM_SERVER_ID },\n              { provide: SSRStylesHost, useClass: SSRStylesHost, deps: [DOCUMENT, APP_ID] },\n            ]\n          : [{ provide: SSRStylesHost, useClass: SSRStylesHost, deps: [DOCUMENT] }]),\n        { provide: SharedStylesHost, useExisting: SSRStylesHost },\n        { provide: DomSharedStylesHost, useClass: SSRStylesHost },\n      ],\n    };\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  HttpEvent,\n  HttpHandler,\n  HttpHeaders,\n  HttpInterceptor,\n  HttpParams,\n  HttpRequest,\n  HttpResponse,\n} from '@angular/common/http';\nimport { ApplicationRef, Injectable } from '@angular/core';\nimport { StateKey, TransferState, makeStateKey } from '@angular/platform-browser';\nimport { Observable, of } from 'rxjs';\nimport { filter, take, tap } from 'rxjs/operators';\n\ninterface TransferHttpResponse {\n  body?: any | null;\n  headers?: Record<string, string[]>;\n  status?: number;\n  statusText?: string;\n  url?: string;\n}\n\n@Injectable()\nexport class TransferHttpCacheInterceptor implements HttpInterceptor {\n  private isCacheActive = true;\n\n  private makeCacheKey(method: string, url: string, params: HttpParams): StateKey<string> {\n    // make the params encoded same as a url so it's easy to identify\n    const encodedParams = params\n      .keys()\n      .sort()\n      .map((k) => `${k}=${params.getAll(k)}`)\n      .join('&');\n    const key = (method === 'GET' ? 'G.' : 'H.') + url + '?' + encodedParams;\n\n    return makeStateKey(key);\n  }\n\n  constructor(appRef: ApplicationRef, private transferState: TransferState) {\n    // Stop using the cache if the application has stabilized, indicating initial rendering is\n    // complete.\n    appRef.isStable\n      .pipe(\n        filter((isStable) => isStable),\n        take(1),\n        tap(() => (this.isCacheActive = false)),\n      )\n      .subscribe();\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (!this.isCacheActive || !['GET', 'HEAD'].includes(req.method)) {\n      // Cache is no longer active. Pass the request through.\n      return next.handle(req);\n    }\n\n    const storeKey = this.makeCacheKey(req.method, req.url, req.params);\n\n    if (this.transferState.hasKey(storeKey)) {\n      // Request found in cache. Respond using it.\n      const response = this.transferState.get<TransferHttpResponse>(storeKey, {});\n\n      return of(\n        new HttpResponse<any>({\n          body: response.body,\n          headers: new HttpHeaders(response.headers),\n          status: response.status,\n          statusText: response.statusText,\n          url: response.url,\n        }),\n      );\n    }\n\n    // Request not found in cache. Make the request and cache it.\n    const httpEvent = next.handle(req);\n\n    return httpEvent.pipe(\n      tap((event: HttpEvent<unknown>) => {\n        if (event instanceof HttpResponse) {\n          this.transferState.set<TransferHttpResponse>(storeKey, {\n            body: event.body,\n            headers: this.getHeaders(event.headers),\n            status: event.status,\n            statusText: event.statusText,\n            url: event.url ?? '',\n          });\n        }\n      }),\n    );\n  }\n\n  private getHeaders(headers: HttpHeaders): Record<string, string[]> {\n    const headersMap: Record<string, string[]> = {};\n\n    for (const key of headers.keys()) {\n      const value = headers.getAll(key);\n      if (typeof value === 'string') {\n        headersMap[key] = value;\n      }\n    }\n\n    return headersMap;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserTransferStateModule } from '@angular/platform-browser';\nimport { TransferHttpCacheInterceptor } from './transfer-http-cache.interceptor';\n\n@NgModule({\n  imports: [BrowserTransferStateModule],\n  providers: [\n    TransferHttpCacheInterceptor,\n    { provide: HTTP_INTERCEPTORS, useExisting: TransferHttpCacheInterceptor, multi: true },\n  ],\n})\nexport class TransferHttpCacheModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {\n  RendererModule,\n  NGRenderMode as ɵNGRenderMode,\n  NGRenderModeAPI as ɵNGRenderModeAPI,\n} from './src/module';\nexport { TransferHttpCacheModule } from './src/transfer-http-cache/transfer-http-cache.module';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {SSRStylesHost as ɵnguniversal_modules_common_clover_clover_a} from './src/styles_host';\nexport {TransferHttpCacheInterceptor as ɵnguniversal_modules_common_clover_clover_b} from './src/transfer-http-cache/transfer-http-cache.interceptor';"],"names":["SharedStylesHost","getDOM","escapeHtml","PLATFORM_SERVER_ID","DomSharedStylesHost"],"mappings":"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"}